apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "zabbix.fullname" . }}
  labels:
{{ include "zabbix.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "zabbix.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "zabbix.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ template "zabbix.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: DB_SERVER_HOST
              value: {{ .Values.zabbixserver.DB_SERVER_HOST }}
            - name: DB_SERVER_PORT
              value: {{ .Values.zabbixserver.DB_SERVER_PORT | quote }}
            - name: POSTGRES_USER
              value: {{ .Values.zabbixserver.POSTGRES_USER }}
            # - name: POSTGRES_USER_FILE
            #  value: value: {{ .Values.zabbixserver.POSTGRES_USER_FILE }}
            - name: POSTGRES_PASSWORD
              value: {{ .Values.zabbixserver.POSTGRES_PASSWORD }}
            #- name: POSTGRES_PASSWORD_FILE
            #  value: value: {{ .Values.zabbixserver.POSTGRES_PASSWORD_FILE }}
            - name: POSTGRES_DB
              value: {{ .Values.zabbixserver.POSTGRES_DB | quote }}
            - name: ZBX_LOADMODULE
              value: {{ .Values.zabbixserver.ZBX_LOADMODULE | quote }}
            - name: ZBX_DEBUGLEVEL
              value: {{ .Values.zabbixserver.ZBX_DEBUGLEVEL | quote }}
            - name: ZBX_TIMEOUT
              value: {{ .Values.zabbixserver.ZBX_TIMEOUT | quote }}
            - name: ZBX_JAVAGATEWAY_ENABLE
              value: {{ .Values.zabbixserver.ZBX_JAVAGATEWAY_ENABLE | quote }}
            - name: ZBX_VMWARECACHESIZE
              value: {{ .Values.zabbixserver.ZBX_VMWARECACHESIZE | quote }}
            - name: ZBX_CACHESIZE
              value: {{ .Values.zabbixserver.ZBX_CACHESIZE | quote }}
            - name: ZBX_TRENDCACHESIZE
              value: {{ .Values.zabbixserver.ZBX_TRENDCACHESIZE | quote }}
            - name: ZBX_HISTORYCACHESIZE
              value: {{ .Values.zabbixserver.ZBX_HISTORYCACHESIZE | quote }}
            - name: ZBX_VALUECACHESIZE
              value: {{ .Values.zabbixserver.ZBX_VALUECACHESIZE | quote }}
            - name: ZBX_HISTORYINDEXCACHESIZE
              value: {{ .Values.zabbixserver.ZBX_HISTORYINDEXCACHESIZE | quote }}
          ports:
            - name: http
              containerPort: 10051
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
#          volumeMounts:
#            {{- if .Values.persistence.enabled }}
#            - name: alertscripts
#              mountPath: {{ .Values.persistence.mountPath }}/alertscripts/
#              subPath: {{ .Values.persistence.subPath }}
#              readOnly: false
#            - name: externalscripts
#              mountPath: {{ .Values.persistence.mountPath }}/externalscripts
#              subPath: {{ .Values.persistence.subPath }}
#              readOnly: false
#            - name: modules
#              mountPath: {{ .Values.persistence.mountPath }}/modules
#              subPath: {{ .Values.persistence.subPath }}
#              readOnly: false
#            - name: enc
#              mountPath: {{ .Values.persistence.mountPath }}/enc
#              subPath: {{ .Values.persistence.subPath }}
#              readOnly: false
#            - name: alertscripts
#              mountPath: {{ .Values.persistence.mountPath }}/alertscripts
#              subPath: {{ .Values.persistence.subPath }}
#              readOnly: false
#            - name: ssh_keys
#              mountPath: {{ .Values.persistence.mountPath }}/ssh_keys
#              subPath: {{ .Values.persistence.subPath }}
#              readOnly: false
#            - name: certs
#              mountPath: {{ .Values.persistence.mountPath }}/ssl/certs
#              subPath: {{ .Values.persistence.subPath }}
#              readOnly: false
#            - name: keys
#              mountPath: {{ .Values.persistence.mountPath }}/ssl/keys
#              subPath: {{ .Values.persistence.subPath }}
#              readOnly: false
#            - name: ssl_ca
#              mountPath: {{ .Values.persistence.mountPath }}/ssl/ssl_ca
#              subPath: {{ .Values.persistence.subPath }}
#              readOnly: false
#            - name: export
#              mountPath: {{ .Values.persistence.mountPath }}/export
#              subPath: {{ .Values.persistence.subPath }}
#              readOnly: false
#            - name: snmptraps
#              mountPath: {{ .Values.persistence.mountPath }}/snmptraps
#              subPath: {{ .Values.persistence.subPath }}
#              readOnly: false
#            - name: mibs
#              mountPath: {{ .Values.persistence.mountPath }}/mibs
#              subPath: {{ .Values.persistence.subPath }}
#              readOnly: false
#
#            {{- end }}
#
#            volumes:
#
#
#          {{- if and .Values.persistence.enabled .Values.persistence.existingClaim }}
#          - name: data
#            persistentVolumeClaim:
#          {{- with .Values.persistence.existingClaim }}
#          claimName: {{ tpl . $ }}
#          {{- end }}
#          {{- else if not .Values.persistence.enabled }}
#          - name: data
#            emptyDir: {}
#          {{- else if and .Values.persistence.enabled (not .Values.persistence.existingClaim) }}
#          volumeClaimTemplates:
#            - metadata:
#                name: alertscripts
#              {{- with .Values.persistence.annotations }}
#              annotations:
#              {{- range $key, $value := . }}
#              {{ $key }}: {{ $value }}
#              {{- end }}
#              {{- end }}
              spec:
                accessModes:
                {{- range .Values.persistence.accessModes }}
                - {{ . | quote }}
                {{- end }}
                resources:
                  requests:
                    storage: {{ .Values.persistence.size | quote }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
